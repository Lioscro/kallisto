--------------------
./configure
Thu Jan 23 18:46:04 UTC 2020
=== ztest6823.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest6823.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest6823.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest6823.c

Checking for shared library support...
=== ztest6823.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -w -c -O3 -fPIC ztest6823.c
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest6823.so ztest6823.o
Building shared library libz.so.1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest6823.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest6823.c
Checking for size_t... Yes.


=== ztest6823.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest6823.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6823 ztest6823.c
Checking for strerror... Yes.

=== ztest6823.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
Checking for unistd.h... Yes.

=== ztest6823.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
Checking for stdarg.h... Yes.

=== ztest6823.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest6823.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest6823 ztest6823.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest6823.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
Checking for return value of vsnprintf()... Yes.

=== ztest6823.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest6823.c
ztest6823.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static shared all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static
Thu Jan 23 19:03:14 UTC 2020
=== ztest9914.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest9914.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest9914.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest9914.c

Checking for shared library support...
=== ztest9914.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -w -c -O3 -fPIC ztest9914.c
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest9914.so ztest9914.o
Building shared library libz.so.1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest9914.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest9914.c
Checking for size_t... Yes.


=== ztest9914.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest9914.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9914 ztest9914.c
Checking for strerror... Yes.

=== ztest9914.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
Checking for unistd.h... Yes.

=== ztest9914.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
Checking for stdarg.h... Yes.

=== ztest9914.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest9914.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest9914 ztest9914.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest9914.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
Checking for return value of vsnprintf()... Yes.

=== ztest9914.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest9914.c
ztest9914.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static shared all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --host x86_64-w64-mingw32
Thu Jan 23 19:04:16 UTC 2020
unknown option: --host
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --help
Thu Jan 23 19:04:22 UTC 2020
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static --64
Thu Jan 23 19:04:54 UTC 2020
=== ztest10398.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest10398.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10398.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 ztest10398.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest10398.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 ztest10398.c
Checking for size_t... Yes.


=== ztest10398.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest10398.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -m64 -D_LARGEFILE64_SOURCE=1 -o ztest10398 ztest10398.c
Checking for strerror... Yes.

=== ztest10398.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
Checking for unistd.h... Yes.

=== ztest10398.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
Checking for stdarg.h... Yes.

=== ztest10398.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10398.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -m64 -D_LARGEFILE64_SOURCE=1 -o ztest10398 ztest10398.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10398.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
Checking for return value of vsnprintf()... Yes.

=== ztest10398.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest10398.c
ztest10398.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -m64 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -m64 -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static
Thu Jan 23 23:17:20 UTC 2020
=== ztest709.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest709.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest709.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest709.c

Checking for shared library support...
=== ztest709.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -w -c -O3 -fPIC ztest709.c
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest709.so ztest709.o
Building shared library libz.so.1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest709.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest709.c
Checking for size_t... Yes.


=== ztest709.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest709.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest709 ztest709.c
Checking for strerror... Yes.

=== ztest709.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
Checking for unistd.h... Yes.

=== ztest709.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
Checking for stdarg.h... Yes.

=== ztest709.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest709.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest709 ztest709.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest709.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
Checking for return value of vsnprintf()... Yes.

=== ztest709.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest709.c
ztest709.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static shared all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --host=x86_64-w64-mingw32
Thu Jan 23 23:18:14 UTC 2020
unknown option: --host=x86_64-w64-mingw32
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --help
Thu Jan 23 23:18:18 UTC 2020
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --64
Thu Jan 23 23:18:21 UTC 2020
=== ztest1196.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest1196.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1196.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 ztest1196.c

Checking for shared library support...
=== ztest1196.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -w -c -O3 -fPIC -m64 ztest1196.c
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -m64 -o ztest1196.so ztest1196.o
Building shared library libz.so.1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest1196.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 ztest1196.c
Checking for size_t... Yes.


=== ztest1196.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1196.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -m64 -D_LARGEFILE64_SOURCE=1 -o ztest1196 ztest1196.c
Checking for strerror... Yes.

=== ztest1196.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
Checking for unistd.h... Yes.

=== ztest1196.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
Checking for stdarg.h... Yes.

=== ztest1196.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1196.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -m64 -D_LARGEFILE64_SOURCE=1 -o ztest1196 ztest1196.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1196.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
Checking for return value of vsnprintf()... Yes.

=== ztest1196.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -m64 -D_LARGEFILE64_SOURCE=1 ztest1196.c
ztest1196.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static shared all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -m64 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -m64 -D_LARGEFILE64_SOURCE=1
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.11
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static
Thu Jan 23 23:18:48 UTC 2020
=== ztest1556.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest1556.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1556.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest1556.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest1556.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest1556.c
Checking for size_t... Yes.


=== ztest1556.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1556.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1556 ztest1556.c
Checking for strerror... Yes.

=== ztest1556.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
Checking for unistd.h... Yes.

=== ztest1556.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
Checking for stdarg.h... Yes.

=== ztest1556.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1556.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1556 ztest1556.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1556.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
Checking for return value of vsnprintf()... Yes.

=== ztest1556.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1556.c
ztest1556.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static
Thu Jan 23 23:22:34 UTC 2020
=== ztest531.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest531.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest531.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest531.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest531.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest531.c
Checking for size_t... Yes.


=== ztest531.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest531.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest531 ztest531.c
Checking for strerror... Yes.

=== ztest531.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
Checking for unistd.h... Yes.

=== ztest531.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
Checking for stdarg.h... Yes.

=== ztest531.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest531.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest531 ztest531.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest531.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
Checking for return value of vsnprintf()... Yes.

=== ztest531.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest531.c
ztest531.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static
Thu Jan 23 23:23:03 UTC 2020
=== ztest769.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest769.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest769.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest769.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest769.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest769.c
Checking for size_t... Yes.


=== ztest769.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest769.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest769 ztest769.c
Checking for strerror... Yes.

=== ztest769.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
Checking for unistd.h... Yes.

=== ztest769.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
Checking for stdarg.h... Yes.

=== ztest769.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest769.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest769 ztest769.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest769.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
Checking for return value of vsnprintf()... Yes.

=== ztest769.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest769.c
ztest769.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static
Thu Jan 23 23:28:52 UTC 2020
=== ztest297.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest297.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest297.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest297.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest297.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest297.c
Checking for size_t... Yes.


=== ztest297.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest297.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest297 ztest297.c
Checking for strerror... Yes.

=== ztest297.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
Checking for unistd.h... Yes.

=== ztest297.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
Checking for stdarg.h... Yes.

=== ztest297.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest297.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest297 ztest297.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest297.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
Checking for return value of vsnprintf()... Yes.

=== ztest297.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest297.c
ztest297.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/src/mxe/usr/x86_64-w64-mingw32.static --static
Thu Jan 23 23:50:29 UTC 2020
=== ztest1790.c ===
extern int getchar();
int hello() {return getchar();}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c ztest1790.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1790.c ===
int foo() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest1790.c

Building static library libz.a version 1.2.11 with /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc.

=== ztest1790.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 ztest1790.c
Checking for size_t... Yes.


=== ztest1790.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1790.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1790 ztest1790.c
Checking for strerror... Yes.

=== ztest1790.c ===
#include <unistd.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
Checking for unistd.h... Yes.

=== ztest1790.c ===
#include <stdarg.h>
int main() { return 0; }
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
Checking for stdarg.h... Yes.

=== ztest1790.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1790.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1790 ztest1790.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1790.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
Checking for return value of vsnprintf()... Yes.

=== ztest1790.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
/usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1790.c
ztest1790.c:6:1: warning: visibility attribute not supported in this configuration; ignored [-Wattributes]
 }
 ^Checking for attribute(visibility) support... No.

ALL = static all64
AR = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-ar
ARFLAGS = rc
CC = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1
CPP = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-cpp
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = /usr/src/mxe/usr/bin/x86_64-w64-mingw32.static-gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic test64
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/src/mxe/usr/x86_64-w64-mingw32.static
sharedlibdir = ${libdir}
uname = Linux
--------------------


